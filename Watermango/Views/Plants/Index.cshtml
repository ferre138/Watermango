@model IEnumerable<Watermango.Models.Plant>

@{
    ViewBag.Title = "Watermango";
}

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.js"></script>

<style>
    .top-left{
        top: 0;
        left: 0;
    }
    [v-cloak] {
      display: none;
    }
</style>

<!--Watermango table-->
<div id="watermango" class="mt-5" v-cloak>
    <div class="container">
        <div class="row">
            <div class="position-absolute d-flex flex-column p-4 ml-auto top-left">
                <template v-for="(plant, index) in plantsArr">
                    <div v-bind:id="'needsWater' + plant.id" class="toast ml-auto" role="alert" data-delay="700" data-autohide="false">
                        <div class="toast-header bg-danger">
                            <strong class="mr-auto text-light">{{ plant.name }}</strong>
                            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>
                        <div class="toast-body">
                            Hey, there! {{ plant.name }} needs watering!
                        </div>
                    </div>
                </template>
                <template v-for="(plant, index) in plantsArr">
                    <div v-bind:id="'tooSoon' + plant.id" class="toast ml-auto" role="alert" data-delay="2000" data-autohide="true">
                        <div class="toast-header bg-info">
                            <strong class="mr-auto text-light">{{ plant.name }}</strong>
                            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>
                        <div class="toast-body">
                            {{ plant.name }} has been watered recently, please wait 30 seconds between waterings.
                        </div>
                    </div>
                </template>
            </div>
        </div>
    </div>
    <h2>Watermango</h2>

    <table class="table">
        <tr>
            <th>
                Plant Name
            </th>
            <th>
                Status
            </th>
            <th>
                Last Watered
            </th>
            <th></th>
        </tr>

        <tr v-for="(plant, index) in plantsArr">
            <td>
                {{plant.name}}
            </td>
            <td>
                {{plant.status}} <b-spinner v-show="plant.status === 'Watering...'" variant="primary" type="grow" label="Spinning"></b-spinner>
            </td>
            <td>
                {{plant.lastWateredUTC}}
            </td>
            <td>
                <button type="button" class="btn btn-success" v-on:click="waterPlant(plant, index, $event); isWater = true">Water Plant</button>
            </td>
        </tr>

    </table>
</div>

<script type="text/javascript">
    var app = new Vue({
        el: '#watermango',
        data: {
            plantsArr: [],
            plant: '',
            isWater: false,
        },
        created: function () {
            this.getPlants();
        },
        mounted: function () {
            this.$nextTick(function () {
                setTimeout(function checkWater() {
                    app.getPlants();
                    app.needsWaterToast()
                    setTimeout(checkWater, 30000);
                }, 500);
            });
        },
        methods: {
            waterPlant: function (plant, index, e) {
                var thisPlantBtn = e.target;
                var tempPlant = app.plantsArr[index];
                var seconds = tempPlant.lastWateredUTC.getTime() / 1000;
                var now = new Date(Date.now());
                var currentSeconds = now.getTime() / 1000;
                var diff = currentSeconds - seconds;
                var timeoutFn;
                if (currentSeconds > seconds + 30) {
                    console.log("It's been over 30 seconds since last watered. You can water it now! " + currentSeconds + " - " + seconds + " = " + diff);
                    $('#needsWater' + plant.id + '.toast').toast("hide");
                    timeoutFn = setTimeout(function () {
                        axios
                            .put('https://localhost:44373/api/plants/' + plant.id).then(function (response) {
                                var tempArr = response.data;
                                tempArr.forEach(function (plant) {
                                    var date = new Date(plant.lastWatered);
                                    var lastWateredUTC = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());
                                    plant["lastWateredUTC"] = lastWateredUTC;
                                });
                                app.plantsArr = tempArr;
                                thisPlantBtn.disabled = false;
                            })
                            .catch(error => {
                                console.log(error.response)
                            });
                    }, 10000);
                    thisPlantBtn.disabled = true;
                    app.plantsArr[index].status = 'Watering...';
                }
                else {
                    console.log("It hasn't been 30 seconds yet, you will need to wait!" + currentSeconds + " - " + seconds + " = " + diff);
                    $('#tooSoon'+plant.id + '.toast').toast("show");
                    thisPlantBtn.disabled = false;
                }
            },
            getPlants: function () {
                axios
                    .get('https://localhost:44373/api/plants')
                    .then(function (response) {
                        var tempArr = response.data;
                        tempArr.forEach(function (plant) {
                            var date = new Date(plant.lastWatered);
                            var lastWateredUTC = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());
                            plant["lastWateredUTC"] = lastWateredUTC;
                        })
                        app.plantsArr = tempArr;
                    })
                    .catch(error => {
                        console.log(error.response)
                    });
            },
            needsWaterToast: function () {
                this.plantsArr.forEach(function (plant) {
                    if (plant.status === "Needs water!")
                        $('#needsWater'+plant.id + '.toast').toast("show");
                });
            } 
        }
    })
</script>